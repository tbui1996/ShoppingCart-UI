{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbui/Desktop/axle/src/Home/Form/ResetButton.tsx\",\n  _s = $RefreshSig$();\n//ResetButton.tsx\nimport { Button } from \"@chakra-ui/react\";\nimport { useFormikContext } from \"formik\";\nimport { titleSearch, genreSearch, authorSearch } from \"../../atom/store\";\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetButton = () => {\n  _s();\n  //access formik context to check if the form is dirty.\n  const [, setTitleText] = useRecoilState(titleSearch);\n  const [, setGenreText] = useRecoilState(genreSearch);\n  const [, setAuthorText] = useRecoilState(authorSearch);\n  const {\n    dirty,\n    resetForm\n  } = useFormikContext();\n  const handleClick = () => {\n    resetForm();\n    setTitleText(' ');\n    setGenreText(' ');\n    setAuthorText(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: !dirty,\n      onClick: () => handleClick(),\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ResetButton, \"CkwRsXZFwAw/iZMVKbFahPKzMEM=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState, useFormikContext];\n});\n_c = ResetButton;\nexport default ResetButton;\nvar _c;\n$RefreshReg$(_c, \"ResetButton\");","map":{"version":3,"names":["Button","useFormikContext","titleSearch","genreSearch","authorSearch","React","useRecoilState","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetButton","_s","setTitleText","setGenreText","setAuthorText","dirty","resetForm","handleClick","children","type","className","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thomasbui/Desktop/axle/src/Home/Form/ResetButton.tsx"],"sourcesContent":["//ResetButton.tsx\nimport { Button } from \"@chakra-ui/react\";\nimport { useFormikContext } from \"formik\";\nimport { titleSearch, genreSearch, authorSearch } from \"../../atom/store\";\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nconst ResetButton: React.FC = () => {\n  //access formik context to check if the form is dirty.\n  const [ , setTitleText] = useRecoilState(titleSearch)\n  const [ , setGenreText] = useRecoilState(genreSearch)\n  const [ , setAuthorText] = useRecoilState(authorSearch)\n\n  const { dirty, resetForm } = useFormikContext();\n  const handleClick= () => {\n    resetForm();\n    setTitleText(' ')\n    setGenreText(' ')\n    setAuthorText(' ')\n  }\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        disabled={!dirty}\n        onClick={() => handleClick()}\n      >\n        Clear All\n      </Button>\n    </>\n  );\n};\n\nexport default ResetButton;"],"mappings":";;AAAA;AACA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,SAASC,WAAW,EAAEC,WAAW,EAAEC,YAAY,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM,GAAIC,YAAY,CAAC,GAAGP,cAAc,CAACJ,WAAW,CAAC;EACrD,MAAM,GAAIY,YAAY,CAAC,GAAGR,cAAc,CAACH,WAAW,CAAC;EACrD,MAAM,GAAIY,aAAa,CAAC,GAAGT,cAAc,CAACF,YAAY,CAAC;EAEvD,MAAM;IAAEY,KAAK;IAAEC;EAAU,CAAC,GAAGhB,gBAAgB,CAAC,CAAC;EAC/C,MAAMiB,WAAW,GAAEA,CAAA,KAAM;IACvBD,SAAS,CAAC,CAAC;IACXJ,YAAY,CAAC,GAAG,CAAC;IACjBC,YAAY,CAAC,GAAG,CAAC;IACjBC,aAAa,CAAC,GAAG,CAAC;EACpB,CAAC;EACD,oBACEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACR,MAAM;MACLoB,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,iBAAiB;MAC3BC,QAAQ,EAAE,CAACN,KAAM;MACjBO,OAAO,EAAEA,CAAA,KAAML,WAAW,CAAC,CAAE;MAAAC,QAAA,EAC9B;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACT,CAAC;AAEP,CAAC;AAACf,EAAA,CAzBID,WAAqB;EAAA,QAECL,cAAc,EACdA,cAAc,EACbA,cAAc,EAEZL,gBAAgB;AAAA;AAAA2B,EAAA,GANzCjB,WAAqB;AA2B3B,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}