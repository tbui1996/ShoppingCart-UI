{"ast":null,"code":"var _jsxFileName = \"/Users/thomasbui/Desktop/axle/src/Home/ListOfBooks.tsx\",\n  _s = $RefreshSig$();\nimport { List, Box } from \"@chakra-ui/react\";\nimport useGetAllBooks from \"../queries/getAllBooks\";\nimport ListBookRow from \"./ListBookRow\";\nimport { useRecoilValue } from 'recoil';\nimport { authorSearch, genreSearch, titleSearch } from \"../atom/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListOfBooks = () => {\n  _s();\n  let title = useRecoilValue(titleSearch);\n  let author = useRecoilValue(authorSearch);\n  let genre = useRecoilValue(genreSearch);\n  let {\n    data: bookDetails,\n    isError,\n    isLoading\n  } = useGetAllBooks(title, author, genre);\n  if (isError) {\n    bookDetails = [];\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  const handleClick = () => {\n    console.log('you are the worst!');\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: bookDetails && bookDetails.map((book, index) => /*#__PURE__*/_jsxDEV(ListBookRow, {\n        handleClick: handleClick,\n        ID: book.ID,\n        title: book.title,\n        description: book.description,\n        author: book.author,\n        price: book.price,\n        genre: book.genre\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ListOfBooks, \"feSJuc/K/VzkxjN5KLYIj0GBtOo=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useRecoilValue, useGetAllBooks];\n});\n_c = ListOfBooks;\nexport default ListOfBooks;\nvar _c;\n$RefreshReg$(_c, \"ListOfBooks\");","map":{"version":3,"names":["List","Box","useGetAllBooks","ListBookRow","useRecoilValue","authorSearch","genreSearch","titleSearch","jsxDEV","_jsxDEV","ListOfBooks","_s","title","author","genre","data","bookDetails","isError","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","console","log","map","book","index","ID","description","price","_c","$RefreshReg$"],"sources":["/Users/thomasbui/Desktop/axle/src/Home/ListOfBooks.tsx"],"sourcesContent":["import { List, Box, Text, Button } from \"@chakra-ui/react\";\nimport useGetAllBooks from \"../queries/getAllBooks\";\nimport ListBookRow\n from \"./ListBookRow\";\n import {useRecoilValue} from 'recoil';\nimport { authorSearch, genreSearch, titleSearch } from \"../atom/store\";\n\nconst ListOfBooks: React.FC =() => {\n    let title = useRecoilValue(titleSearch);\n    let author = useRecoilValue(authorSearch);\n    let genre = useRecoilValue(genreSearch);\n    let {data: bookDetails, isError, isLoading} = useGetAllBooks(title, author, genre);\n\n    if (isError) {\n        bookDetails = []\n    }\n    if (isLoading) {\n        return <span>Loading...</span>\n    }\n    \n    const handleClick = () => {\n        console.log('you are the worst!')\n    }\nreturn(\n    <List>\n        <Box>\n            {\n                bookDetails && bookDetails.map((book, index: number) => (\n                    <ListBookRow \n                        handleClick={handleClick}\n                        key={index}\n                        ID={book.ID}\n                        title={book.title}\n                        description={book.description}\n                        author={book.author}\n                        price={book.price} \n                        genre={book.genre}                    \n                    />        \n                ))\n            }\n        </Box>\n    </List>\n)\n}\n\nexport default ListOfBooks;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,GAAG,QAAsB,kBAAkB;AAC1D,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,WAAW,MACZ,eAAe;AACpB,SAAQC,cAAc,QAAO,QAAQ;AACtC,SAASC,YAAY,EAAEC,WAAW,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAqB,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAC/B,IAAIC,KAAK,GAAGR,cAAc,CAACG,WAAW,CAAC;EACvC,IAAIM,MAAM,GAAGT,cAAc,CAACC,YAAY,CAAC;EACzC,IAAIS,KAAK,GAAGV,cAAc,CAACE,WAAW,CAAC;EACvC,IAAI;IAACS,IAAI,EAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGhB,cAAc,CAACU,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC;EAElF,IAAIG,OAAO,EAAE;IACTD,WAAW,GAAG,EAAE;EACpB;EACA,IAAIE,SAAS,EAAE;IACX,oBAAOT,OAAA;MAAAU,QAAA,EAAM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC;EACL,oBACIjB,OAAA,CAACT,IAAI;IAAAmB,QAAA,eACDV,OAAA,CAACR,GAAG;MAAAkB,QAAA,EAEIH,WAAW,IAAIA,WAAW,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAa,kBAC/CpB,OAAA,CAACN,WAAW;QACRqB,WAAW,EAAEA,WAAY;QAEzBM,EAAE,EAAEF,IAAI,CAACE,EAAG;QACZlB,KAAK,EAAEgB,IAAI,CAAChB,KAAM;QAClBmB,WAAW,EAAEH,IAAI,CAACG,WAAY;QAC9BlB,MAAM,EAAEe,IAAI,CAACf,MAAO;QACpBmB,KAAK,EAAEJ,IAAI,CAACI,KAAM;QAClBlB,KAAK,EAAEc,IAAI,CAACd;MAAM,GANbe,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAAZ,EAAA,CApCKD,WAAqB;EAAA,QACXN,cAAc,EACbA,cAAc,EACfA,cAAc,EACoBF,cAAc;AAAA;AAAA+B,EAAA,GAJ1DvB,WAAqB;AAsC3B,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}