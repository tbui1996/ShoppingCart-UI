{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport axiosInstance from '../network';\n//import { BookDetails } from './getBooks';\nimport { authorSearch, genreSearch, titleSearch } from '../atom/store';\n// interface ResultWrapper<T>{\n//   result: T;\n// }\nexport const useGetAllBookKey = 'get-all-book';\nconst useGetAllBooks = (title, author, genre, options = {}) => {\n  _s();\n  return useQuery(useGetAllBookKey, async () => (await axiosInstance.get(`/api/books/${titleSearch}/${authorSearch}/${genreSearch}/`)).data, {\n    ...options,\n    enabled: Boolean(titleSearch) && Boolean(authorSearch) && Boolean(genreSearch) && (options.enabled == null || options.enabled)\n  });\n};\n_s(useGetAllBooks, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport default useGetAllBooks;","map":{"version":3,"names":["useQuery","axiosInstance","authorSearch","genreSearch","titleSearch","useGetAllBookKey","useGetAllBooks","title","author","genre","options","_s","get","data","enabled","Boolean"],"sources":["/Users/thomasbui/Desktop/axle/src/queries/getAllBooks.ts"],"sourcesContent":["import { UseQueryOptions, UseQueryResult, useQuery } from 'react-query';\nimport axiosInstance from '../network';\n//import { BookDetails } from './getBooks';\nimport { authorSearch, genreSearch, titleSearch } from '../atom/store'\n\nexport interface ListBookDetail {\n  handleClick: () => void;\n  key: number;\n  ID: number;\n  title: string;\n  author: string;\n  description: string;\n  price: number;\n  genre: string;\n  \n  }\n\n// interface ResultWrapper<T>{\n//   result: T;\n// }\nexport const useGetAllBookKey = 'get-all-book'\n\nconst useGetAllBooks = (title: string, author: string, genre: string,\n  options: UseQueryOptions<ListBookDetail[], string> = {}\n   ): UseQueryResult<ListBookDetail[], string> => \n   useQuery<ListBookDetail[], string>(\n    useGetAllBookKey,\n   async () =>\n  (await axiosInstance.get<ListBookDetail[]>(`/api/books/${titleSearch}/${authorSearch}/${genreSearch}/`\n  ))\n  .data,\n  \n  {\n    ...options,\n    enabled: Boolean(titleSearch) && Boolean(authorSearch) && Boolean(genreSearch) && (options.enabled == null || options.enabled)\n  }\n \n  \n  );\n\nexport default useGetAllBooks;\n"],"mappings":";AAAA,SAA0CA,QAAQ,QAAQ,aAAa;AACvE,OAAOC,aAAa,MAAM,YAAY;AACtC;AACA,SAASC,YAAY,EAAEC,WAAW,EAAEC,WAAW,QAAQ,eAAe;AActE;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,cAAc;AAE9C,MAAMC,cAAc,GAAGA,CAACC,KAAa,EAAEC,MAAc,EAAEC,KAAa,EAClEC,OAAkD,GAAG,CAAC,CAAC;EAAAC,EAAA;EAAA,OAEtDX,QAAQ,CACPK,gBAAgB,EACjB,YACD,CAAC,MAAMJ,aAAa,CAACW,GAAG,CAAoB,cAAaR,WAAY,IAAGF,YAAa,IAAGC,WAAY,GACpG,CAAC,EACAU,IAAI,EAEL;IACE,GAAGH,OAAO;IACVI,OAAO,EAAEC,OAAO,CAACX,WAAW,CAAC,IAAIW,OAAO,CAACb,YAAY,CAAC,IAAIa,OAAO,CAACZ,WAAW,CAAC,KAAKO,OAAO,CAACI,OAAO,IAAI,IAAI,IAAIJ,OAAO,CAACI,OAAO;EAC/H,CAGA,CAAC;AAAA;AAACH,EAAA,CAhBEL,cAAc;EAAA,QAGjBN,QAAQ;AAAA;AAeX,eAAeM,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}