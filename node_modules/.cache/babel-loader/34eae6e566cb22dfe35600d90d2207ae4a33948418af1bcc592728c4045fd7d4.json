{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport axiosInstance from '../network';\n//title\n//author\n//description\n//price 3.99 i.e 4\nexport const useGetBookKey = 'get-book';\n\n// interface ResultWrapper<T>{\n//     result: T;\n// }\n\n// const useGetbooks = (options: UseQueryOptions<BookDetails, string> = {}\n//     ): UseQueryResult<BookDetails, string> => \n//     useQuery<BookDetails, string> (\n//     useGetBookKey,\n//     async() => (\n//         await axiosInstance.get<<ResultWrapper<BookDetails>>('/books')\n//         )).data,\n//         options\n//     );\n//thre input n title, author, or genre.\n\nconst useGetBooks = (title, author, genre) => {\n  _s();\n  useQuery([useGetBookKey, title, author, genre], async () => (await axiosInstance.get(`/books?title=${title}?genre=${genre}?author=${author}`)).data.result, {\n    enabled: !!title && !!author && !!genre\n  });\n};\n_s(useGetBooks, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport default useGetBooks;","map":{"version":3,"names":["useQuery","axiosInstance","useGetBookKey","useGetBooks","title","author","genre","_s","get","data","result","enabled"],"sources":["/Users/thomasbui/Desktop/axle/src/queries/getBooks.ts"],"sourcesContent":["import { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport axiosInstance from '../network';\n//title\n//author\n//description\n//price 3.99 i.e 4\nexport interface BookDetails {\n title: string;\n author: string;\n description: string;\n price: Int32Array;\n}\n\nexport const useGetBookKey = 'get-book'\n\n// interface ResultWrapper<T>{\n//     result: T;\n// }\n\n// const useGetbooks = (options: UseQueryOptions<BookDetails, string> = {}\n//     ): UseQueryResult<BookDetails, string> => \n//     useQuery<BookDetails, string> (\n//     useGetBookKey,\n//     async() => (\n//         await axiosInstance.get<<ResultWrapper<BookDetails>>('/books')\n//         )).data,\n//         options\n//     );\n//thre input n title, author, or genre.\n\nconst useGetBooks = (title: string, author: string, genre: string) => {\n    useQuery(\n        [useGetBookKey, title, author, genre],\n        async () => \n        (await axiosInstance.get<{result: BookDetails}>(`/books?title=${title}?genre=${genre}?author=${author}`)).data.result,\n        {\n            enabled:!!title && !!author && !!genre\n        }\n    )\n}\n\nexport default useGetBooks;"],"mappings":";AAAA,SAASA,QAAQ,QAAyC,aAAa;AACvE,OAAOC,aAAa,MAAM,YAAY;AACtC;AACA;AACA;AACA;AAQA,OAAO,MAAMC,aAAa,GAAG,UAAU;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGA,CAACC,KAAa,EAAEC,MAAc,EAAEC,KAAa,KAAK;EAAAC,EAAA;EAClEP,QAAQ,CACJ,CAACE,aAAa,EAAEE,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC,EACrC,YACA,CAAC,MAAML,aAAa,CAACO,GAAG,CAAyB,gBAAeJ,KAAM,UAASE,KAAM,WAAUD,MAAO,EAAC,CAAC,EAAEI,IAAI,CAACC,MAAM,EACrH;IACIC,OAAO,EAAC,CAAC,CAACP,KAAK,IAAI,CAAC,CAACC,MAAM,IAAI,CAAC,CAACC;EACrC,CACJ,CAAC;AACL,CAAC;AAAAC,EAAA,CATKJ,WAAW;EAAA,QACbH,QAAQ;AAAA;AAUZ,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}